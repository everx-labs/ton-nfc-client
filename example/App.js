/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, { Component } from 'react';
import { Platform, StyleSheet, Text, View, Button } from 'react-native';
import {NfcCardModuleWrapper, NfcNativeModuleError, CardResponse, CardError,  NfcCardSigningBox,
  CardResponseMessage, CardStates, CardResponseStatus, NfcEventsEmitterWrapper} from 'ton-nfc-client';
import Toast from 'react-native-simple-toast';


/*const { 
  TonClient, 
  messageSourceEncoded, 
  messageSourceEncodingParams, 
  signerSigningBox, 
  abiContract, 
  signerNone 
} = require("@tonclient/core");*/

NfcEventsEmitterWrapper.addListener((msg) => {
  Toast.showWithGravity(msg, Toast.LONG, Toast.TOP);
  console.log(msg);
});

let nfcCardModuleWrapper = new NfcCardModuleWrapper();

if (Platform.OS === "ios") {
  nfcCardModuleWrapper.setNfcNotificator();
}

let signingBox  = new NfcCardSigningBox("504394802433901126813236");

export default class App extends Component{
  state = {
    status: 'starting',
    message: '--'
  };
  componentDidMount() {
  }
  render() {
    return (
      <View style={styles.container}>
        
        <View>
              <Button onPress={() => {
                let p = nfcCardModuleWrapper.getRemainingPinTries();
           
                p.then((result) => {
                  console.log(result instanceof CardResponse)
                  alert("Remainig Pin tries : " + result.message)
                })
                .catch((e) => {
                  console.log(e instanceof CardError)
                  console.log(e instanceof NfcNativeModuleError)
                  console.log(e.status)
                  console.log(e.errorCode)
                  console.log(e.message)
                  alert(e.message)
                });
            }} title="getRemainingPinTries1"/>
        </View>
        <View>
              <Button onPress={() => {
                nfcCardModuleWrapper.checkIfNfcSupported()
            .then((result) => alert("checkIfNfcSupported : " + result.message)).catch((e) => alert(e.message))
            }} title="checkIfNfcSupported"/>
        </View>
        <View>
              <Button onPress={() => {
                signingBox.sign({unsigned: "1100"})
            .then((result) => alert("getSignatureFromSigningBox : " + result.signature)).catch((e) => alert(e.message))
            }} title="getSignatureFromSigningBox"/>
        </View>
        <View>
              <Button onPress={() => {
                signingBox.get_public_key()
            .then((result) => alert("getPublicKeyFromSigningBox : " + result.public_key)).catch((e) => alert(e.message))
            }} title="getPublicKeyFromSigningBox"/>
        </View>
        <View>
              <Button onPress={() => {
                nfcCardModuleWrapper.getAllSerialNumbers()
            .then((result) => alert("getAllSerialNumbers : " + result.serialNumbers.length)).catch((e) => alert(e.message))
            }} title="getAllSerialNumbers"/>
        </View>
        <View>
              <Button onPress={() => nfcCardModuleWrapper.getKeyChainInfo()
            .then((result) => alert("getKeyChainInfo : " + result.numberOfKeys)).catch((e) => alert(e.message))} title="getKeyChainInfo"/>
        </View>
        <View>
              <Button onPress={() => nfcCardModuleWrapper.getHmac("0")
            .then((result) => alert("getHmac : " + result.hmac)).catch((e) => alert(e.message))} title="getHmac"/>
        </View>
        <View>
              <Button onPress={() => nfcCardModuleWrapper.getPublicKeyForDefaultPath()
            .then((result) => alert("getPublicKeyForDefaultPath : " + result.message)).catch((e) => alert(e.message))} title="getPublicKeyForDefaultPath"/>
        </View>

        <View>
              <Button onPress={() => nfcCardModuleWrapper.checkSerialNumberAndGetPublicKeyForDefaultPath("504394802433901126813236")
            .then((result) => alert("checkSerialNumberAndGetPublicKeyForDefaultPath : " + result.message)).catch((e) => alert(e.message))} title="checkSerialNumberAndGetPublicKeyForDefaultPath"/>
        </View>

        <View>
              <Button onPress={() => nfcCardModuleWrapper.checkSerialNumberAndGetPublicKey("504394802433901126813236", "17")
            .then((result) => alert("checkSerialNumberAndGetPublicKey : " + result.message)).catch((e) => alert(e.message))} title="checkSerialNumberAndGetPublicKey"/>
        </View>

        <View>
              <Button onPress={async () => {

              try{
                console.log("start : ");
                let result = await nfcCardModuleWrapper.checkSerialNumberAndVerifyPinAndSignForDefaultHdPath("504394802433901126813236", "1111", "5555");
                alert("sign 1 : " + result.message);
                console.log("sign 1 : " + result.message);


                result = await nfcCardModuleWrapper.checkSerialNumberAndVerifyPinAndSignForDefaultHdPath("504394802433901126813236", "1111", "5555")
                alert("sign 2 : " + result.message);
                console.log("sign 2 : " + result.message);
              }
              catch(e) {
                console.log("ERRRRROR!!!:")
                console.log(e.message)
              }
                
            }} title="signTwice"/>
        </View>

        <View>
              <Button onPress={() => nfcCardModuleWrapper.checkSerialNumberAndVerifyPinAndSignForDefaultHdPath("504394802433901126813236", "1111", "5555")
            .then((result) => alert("checkSerialNumberAndVerifyPinAndSignForDefaultHdPathWithoutDialog : " + result.message)).catch((e) => alert(e.message))} title="checkSerialNumberAndVerifyPinAndSignForDefaultHdPath"/>
        </View>

        <View>
              <Button onPress={() => nfcCardModuleWrapper.checkSerialNumberAndVerifyPinAndSign("504394802433901126813236", "1111", "18", "5555")
            .then((result) => alert("checkSerialNumberAndVerifyPinAndSign : " + result.message)).catch((e) => alert(e.message))} title="checkSerialNumberAndVerifyPinAndSign"/>
        </View>

        <View>
              <Button onPress={() => nfcCardModuleWrapper.createKeyForHmac("F4B072E1DF2DB7CF6CD0CD681EC5CD2D071458D278E6546763CBB4860F8082FE14418C8A8A55E2106CBC6CB1174F4BA6D827A26A2D205F99B7E00401DA4C15ACC943274B92258114B5E11C16DA64484034F93771547FBE60DA70E273E6BD64F8A4201A9913B386BCA55B6678CFD7E7E68A646A7543E9E439DD5B60B9615079FE",
              "7256EFE7A77AFC7E9088266EF27A93CB01CD9432E0DB66D600745D506EE04AC4",
              "504394802433901126813236")
            .then((result) => alert("createKeyForHmac : " + result.message)).catch((e) => alert(e.message))} title="createKeyForHmac"/>
        </View>

        <View>
              <Button onPress={async () => {



                let result = await nfcCardModuleWrapper.getSerialNumber();
                alert("getSerialNumber 1 : " + result.message);

                try{
                  result = await nfcCardModuleWrapper.getSault();
                  alert("getSault : " + result.message);
                }
                catch(e) {
                  console.log("fail is here44775")
                  console.log(e.message)
                }
                //await new Promise(r => setTimeout(r, 4000))
                console.log("fail is here44445")
                
                result = await nfcCardModuleWrapper.getSerialNumber();
                console.log("fail is here2")
                alert("getSerialNumber 2 : " + result.message);

                result = await nfcCardModuleWrapper.getSerialNumber();
                alert("getSerialNumber 3 : " + result.message);

                try{
                  result = await nfcCardModuleWrapper.getSault();
                  alert("getSault 2: " + result.message);
                }
                catch(e) {
                  console.log("fail 2 is here")
                  console.log(e.message)
                }

                result = await nfcCardModuleWrapper.getSerialNumber();
                alert("getSerialNumber 3 : " + result.message);
                
            }} title="getSerialNumber"/>
        </View>
        <View>
              <Button onPress={() => nfcCardModuleWrapper.getHashes()
            .then((result) => alert("getHashes : " + result.sn)).catch((e) => alert(e.message))} title="getHashes"/>
        </View>
        <View>
              <Button onPress={() => nfcCardModuleWrapper.getMaxPinTriesWithoutDialog()
            .then((result) => alert("getMaxPinTries : " + result.message)).catch((e) => alert(e.message))} title="getMaxPinTries"/>
        </View>  


        <View>
              <Button onPress={async () => {
                try {
                  let result = await nfcCardModuleWrapper.getTonAppletState();
                  console.log("state: " + result.message);
                 // await new Promise(r => setTimeout(r, 5000));
                  result = await nfcCardModuleWrapper.getTonAppletState();
                  console.log(result.message === CardStates.WaiteAuthentication)
                  console.log("state: " + result.message);
                }
                catch(e){
                  console.log(e.message)
                }
              }} title="getTonAppletState"/>
        </View>



        <View>
              <Button onPress={() => nfcCardModuleWrapper.createKeyForHmac(
                "F4B072E1DF2DB7CF6CD0CD681EC5CD2D071458D278E6546763CBB4860F8082FE14418C8A8A55E2106CBC6CB1174F4BA6D827A26A2D205F99B7E00401DA4C15ACC943274B92258114B5E11C16DA64484034F93771547FBE60DA70E273E6BD64F8A4201A9913B386BCA55B6678CFD7E7E68A646A7543E9E439DD5B60B9615079FE",
                "7256EFE7A77AFC7E9088266EF27A93CB01CD9432E0DB66D600745D506EE04AC4",
                "504394802433901126813236"
              )
            .then((result) => {
              alert("createKeyForHmac : " + result.message)
              console.log(result.message === CardResponseMessage.Done)
            }).catch((e) => alert(e.message))} title="createKeyForHmac"/>
        </View>

        <View>
              <Button onPress={() => nfcCardModuleWrapper.turnOnWallet("F4B072E1DF2DB7CF6CD0CD681EC5CD2D071458D278E6546763CBB4860F8082FE14418C8A8A55E2106CBC6CB1174F4BA6D827A26A2D205F99B7E00401DA4C15ACC943274B92258114B5E11C16DA64484034F93771547FBE60DA70E273E6BD64F8A4201A9913B386BCA55B6678CFD7E7E68A646A7543E9E439DD5B60B9615079FE",
              "7256EFE7A77AFC7E9088266EF27A93CB01CD9432E0DB66D600745D506EE04AC4",
              "1A550F4B413D0E971C28293F9183EA8A")
            .then((result) => alert("turnOnWallet : " + result.message)).catch((e) => alert(e.errorCode))} title="turnOnWallet"/>
        </View>

        <View>
              <Button onPress={() => nfcCardModuleWrapper.turnOnWalletWithPin(
              "5555",
              "F4B072E1DF2DB7CF6CD0CD681EC5CD2D071458D278E6546763CBB4860F8082FE14418C8A8A55E2106CBC6CB1174F4BA6D827A26A2D205F99B7E00401DA4C15ACC943274B92258114B5E11C16DA64484034F93771547FBE60DA70E273E6BD64F8A4201A9913B386BCA55B6678CFD7E7E68A646A7543E9E439DD5B60B9615079FE",
              "7256EFE7A77AFC7E9088266EF27A93CB01CD9432E0DB66D600745D506EE04AC4",
              "1A550F4B413D0E971C28293F9183EA8A")
            .then((result) => alert("turnOnWalletWithPin : " + result.message)).catch((e) => alert(e.message))} title="turnOnWalletWithPin"/>
        </View>
      
      </View>
      
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
});
